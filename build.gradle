plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = "luminousLLMChat-fabric"
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"lllmchat" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

fabricApi {
	configureDataGeneration {
		client = true
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// HTTP client for LLM API calls
	implementation 'com.squareup.okhttp3:okhttp:4.12.0'
	include 'com.squareup.okhttp3:okhttp:4.12.0'

	// Okio dependency (required by OkHttp)
	implementation 'com.squareup.okio:okio:3.6.0'
	include 'com.squareup.okio:okio:3.6.0'

	// JSON processing
	implementation 'com.google.code.gson:gson:2.10.1'
	include 'com.google.code.gson:gson:2.10.1'

	// Configuration management
	implementation 'com.typesafe:config:1.4.3'
	include 'com.typesafe:config:1.4.3'

	// MCP Java SDK
	implementation 'io.modelcontextprotocol.sdk:mcp:0.11.0'
	include 'io.modelcontextprotocol.sdk:mcp:0.11.0'

	// Test dependencies
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
	testImplementation 'org.junit.platform:junit-platform-suite:1.10.0'
	testImplementation 'org.mockito:mockito-core:5.5.0'
	testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

test {
	useJUnitPlatform()
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

// Configure sources jar naming
tasks.named('sourcesJar') {
	archiveFileName = "luminousLLMChat-fabric-${project.minecraft_version}-${project.mod_version}-sources.jar"
}

jar {
	inputs.property "archivesName", project.base.archivesName
	archiveFileName = "luminousLLMChat-fabric-${project.minecraft_version}-${project.mod_version}.jar"

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// Configure remapped jar naming
tasks.named('remapJar') {
	archiveFileName = "luminousLLMChat-fabric-${project.minecraft_version}-${project.mod_version}.jar"
}

tasks.named('remapSourcesJar') {
	archiveFileName = "luminousLLMChat-fabric-${project.minecraft_version}-${project.mod_version}-sources.jar"
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}